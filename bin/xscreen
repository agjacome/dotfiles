#!/bin/bash
set -euo pipefail

function ensure_xrandr() {
    command -v xrandr >/dev/null 2>&1 || {
        echo >&2 "Could not find xrandr executable. Aborting."
        exit 1
    }
}

function ensure_connected() {
    local -r displays=$(xrandr | grep " connected" | cut -d' ' -f1)

    for display in $@; do
        [[ "${displays[@]}" =~ "$display" ]] || {
            echo >&2 "$display disconnected. Aborting."
            exit 1
        }
    done
}

function enable_screens() {
    local -r primary=$1
    local -r secondary=${@:2}

    local xrandr_args=""
    local last_enabled=$primary

    for display in $(xrandr | grep -E "(dis)?connected" | cut -d' ' -f1); do
        if [[ "$primary" == "$display" ]]; then
            xrandr_args+="--output $display --auto --primary "
        elif [[ "${secondary[@]}" =~ "$display" ]]; then
            xrandr_args+="--output $display --auto --right-of $last_enabled "
            last_enabled=$display
        else
            xrandr_args+="--output $display --off "
        fi
    done

    xrandr $xrandr_args
}

function main() {
    local -r to_enable=$(echo $@ | tr '[:lower:]' '[:upper:]')

    ensure_xrandr
    ensure_connected $to_enable

    enable_screens $to_enable
}

main $@
