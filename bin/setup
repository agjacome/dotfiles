#!/usr/bin/env bash
set -euo pipefail

declare -r http_remote="https://github.com/agjacome/dotfiles.git"
declare -r ssh_remote="git@github.com:agjacome/dotfiles.git"
declare -r local="$HOME/.dotfiles"

function main() {
    printf "\e[32m%s\e[m\n\n" "Setting up dotfiles..."

    if [ $# -lt 1 ]; then
        printf "\e[31m%s\e[m\n\n" "Please provide a flake profile as argument"
        exit 1
    fi
    local -r profile=${1}
    printf "%s \033[1m%s\033[0m\n" "Profile:" ${profile}

    printf "%s\n" "Setting up nix..."
    setup_nix

    printf "%s\n" "Cloning dotfiles repo..."
    clone_repository

    printf "%s\n" "Setting up home-manager..."
    setup_home_manager ${profile}

    printf "%s\n" "Setting up chezmoi..."
    setup_chezmoi ${profile}

    printf "%s\n" "Setting up fish..."
    setup_fish

    printf "\n\e[32m%s\e[m\n" "Done!"
}

function setup_nix() {
    if command -v nix &> /dev/null; then
        return
    fi

    if command -v pacman &> /dev/null; then
        sudo pacman -Syu --noconfirm nix
        return
    fi

    curl -L https://nixos.org/nix/install | sh -s -- --daemon
    mkdir -p $HOME/.local/state/nix/profiles
}

function clone_repository() {
    if [[ -d ${local} ]]; then
        return
    fi

    nix-shell ${local}/shell.nix -p git --run "\
        git clone ${http_remote} ${local} && \
        git -C ${local} remote set-url origin ${ssh_remote}"
}

function setup_home_manager() {
    local -r profile=${1-}

    nix-shell ${local}/shell.nix --run "home-manager switch --impure --flake ${local}/#${profile}"
}

function setup_chezmoi() {
    local -r profile=${1-""}

    if [[ ! -f ${HOME}/.config/chezmoi/chezmoi.toml ]]; then
        chezmoi init -S ${local}
        sed -i "s/flakeProfile = \".*\"/flakeProfile = \"${profile}\"/" $HOME/.config/chezmoi/chezmoi.toml
    fi

    chezmoi apply -S ${local} --exclude externals
    chezmoi apply -S ${local} --include externals
}

function setup_fish() {
    if ! chsh -l | grep -q $(which fish); then
        echo $(which fish) | sudo tee -a /etc/shells
    fi

    if [[ $SHELL != $(which fish) ]]; then
        chsh -s $(which fish)
    fi

    fish -c "fisher update"
}

main $@
