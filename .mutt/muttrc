# Paths
set folder           = ~/var/mail            # mailbox location
set header_cache     = ~/.mutt/cache/headers # where to store cached headers
set message_cachedir = ~/.mutt/cache/bodies  # where to store bodies
set certificate_file = ~/.mutt/certificates  # where to store certificates
set mailcap_path     = ~/.mutt/mailcap       # entries for filetypes
set tmpdir           = ~/.mutt/temp          # where to keep temp files

source ~/.mutt/colors            # color theme
source ~/.mutt/accounts/accounts # accounts config
source ~/var/mail/mailboxes      # offlineimap mailboxes

# Basic options
set wait_key    = no                 # shut up, mutt
set mbox_type   = Maildir            # mailbox type
set timeout     = 3                  # idle time before scanning
set mail_check  = 0                  # minimum time between scanns
set editor      = "vim +:silent+?^$" # vim as mail editor
set text_flowed = yes                # use text/plain;format=flowed
set ispell      = "aspell -e -c"     # check spelling mistakes

set   move          # move from inbox to mbox when readed
set   delete        # don't ask, just do
unset confirmappend # don't ask, just do
set   quit          # don't ask, just do

unset mark_old        # read/new is good enough
set   beep_new        # bell on new mails
set   pipe_decode     # strip headers and eval mimes when piping
set   thorough_search # strip headers and eval mimes before searching

# Header options
ignore      *                            # ignore all headers
unignore    from: to: cc: date: subject: # show only these
unhdr_order *                            # ignore default order
hdr_order   from: to: cc: date: subject: # use this order

# Index view options
set date_format  = "%y/%m/%d at %I:%M%P"
set index_format = "[%Z]  %D  %-20.20F  %s"

set sort     = threads                    # sort messages in thread mode (like gmail)
set sort_aux = reverse-last-date-received # show last received first (like gmail)
set uncollapse_jump                       # don't collapse on unread messages

set sort_re  # thread based on following regexp
set reply_regexp = "^(([Rr][Ee]?(\[[0-9]+\])?: *)?(\[[^]]+\] *)?)*"

# Index key bindings
bind index gg      first-entry
bind index G       last-entry
bind index R       group-reply
bind index N       search-opposite
bind index <tab>   sync-mailbox
bind index <space> collapse-thread

macro index C   "<copy-message>?<toggle-mailboxes>" "copy a message to a mailbox"
macro index M   "<save-message>?<toggle-mailboxes>" "move a message to a mailbox"
macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"

# Pager view options
set   pager_index_lines = 10  # number of index lines to show
set   pager_context     = 3   # number of context lines to show
set   pager_stop              # don't go to next message automatically
set   menu_scroll             # scroll in menus
set   tilde                   # show tildes like in vim
set   smart_wrap              # wrap long lines at word boundaries
unset markers                 # no ugly + sign on wrapped lines

set quote_regexp = "^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
alternative_order text/plain text/enriched text/html

# Pager key bindings
bind pager  k        previous-line
bind pager  j        next-line
bind pager  gg       top
bind pager  G        bottom
bind pager  R        group-reply
bind pager  N        search-opposite
bind pager  <space>  toggle-quoted
bind attach <return> view-mailcap

macro pager \Cu "|urlview<enter>" "call urlview to open links"

# Compose view options
set   envelope_from                    # which from?
set   sig_dashes                       # dashes before signature
set   edit_headers                     # show headers when composing
set   fast_reply                       # skip to compose when replying
set   askcc                            # ask for CC:
set   fcc_attach                       # save attachments with the body
unset mime_forward                     # forward attachments as part of body
set   forward_format = "Fwd: %s"       # format fo subject when forwarding
set   forward_decode                   # decode when forwarding
set   attribution = "On %d, %n wrote:" # format of quoting header
set   reply_to                         # use reply-to header in replies
set   reverse_name                     # reply as whomever it was to
set   include                          # include message in replies
set   forward_quote                    # include message in forwards

bind compose p postpone-message
bind index   p recall-message

# Statusbar
set status_chars  = " *%A"
set status_format = "---[ Folder: %f ]---[%r%m messages%?n? (%n new)?%?d? (%d to delete)?%?t? (%t tagged)? ]---%>-%?p?( %p postponed )?---"

# Abook integration
set query_command = "abook --mutt-query '%s'"

bind editor <Tab> complete-query
bind editor ^T    complete

macro generic,index,pager \Ca "<shell-escape>abook<return>" "launch abook"
macro index,pager         ,A  "<pipe-message>abook --add-email<return>" "add the sender to the address book"

# Notmuch integration (through mutt-notmuch-py and not the painful perl's notmuch-mutt)
macro index S "<enter-command>unset wait_key<enter><shell-escape>mutt-notmuch-py ~/var/mail/temporary/search<enter><change-folder-readonly>+temporary/search<enter>" "search mail (using notmuch)"
mailboxes "+temporary/search"
