#!/usr/bin/env bash

function print_song()
{
    song_info="$(ncmpcpp --now-playing '{{{{%t \uE01B }%a}}|{%f}}')"
    if [[ ! $song_info ]]; then
        song_info="off"
    elif [[ ${#song_info} > 50 ]]; then
        song_info="$(echo ${song_info} | head -c 50)..."
    fi
    echo -ne "\x04\uE01A\x0B \uE00E ${song_info}"
}

function print_email()
{
    echo -ne "\x05\uE01A\x0C \uE014"
    for maildir in $(find $HOME/.mutt/maildir/*/inbox/new -type d); do
        unread_count="$(ls "${maildir}" | wc -l)"
        if [[ $unread_count -ne 0 ]]; then
            echo -ne " ${unread_count}"
        else
            echo -ne " 0"
        fi
    done
}

function print_msg()
{
    last_msg="$(cat $HOME/.logs/irssi_pipe)"
    echo -ne "\uE01B \uE013 ${last_msg}"
}

function print_cpu()
{
    cpu_usage="$(mpstat | awk '$12 ~ /[0-9.]+/ {print 100 - $12}')"
    echo -ne "\x04\uE01A\x09 \uE00F ${cpu_usage}%"
}

function print_mem()
{
    mem_used="$(free -m | awk '/buffers\/cache/ {print $3}')"
    echo -ne "\uE01B \uE010 ${mem_used}M"
}

function print_volume()
{
    volume="$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')"
    echo -ne "\x04\uE01A\x06 \uE015 ${volume}%"
}

function print_battery()
{
    battery="$(acpi -b | cut -d ',' -f 2 | tr -d ' ')"
    echo -ne "\uE01B \uE01E ${battery}"
}

function print_date()
{
    datetime="$(date "+%a %d %b \uE01B %H:%M")"
    echo -ne "\x05\uE01A\x02 \uE016 ${datetime}"
}

rx_old=$(cat /sys/class/net/wlan0/statistics/rx_bytes)
tx_old=$(cat /sys/class/net/wlan0/statistics/tx_bytes)
while true; do
    rx_now=$(cat /sys/class/net/wlan0/statistics/rx_bytes)
    tx_now=$(cat /sys/class/net/wlan0/statistics/tx_bytes)

    let rx_rate=($rx_now - $rx_old)/1024
    let tx_rate=($tx_now - $tx_old)/1024

    statstring="$(print_song) $(print_email) $(print_msg)"
    statstring="${statstring} $(print_cpu) $(print_mem)"

    statstring="${statstring} $(printf "%-14b" "\x05\uE01A\x08 \uE011 ${rx_rate}K")"
    statstring="${statstring} $(printf "%-13b" "\x01\uE01B\x07 \uE012 ${tx_rate}K")"
    statstring="${statstring} $(print_volume) $(print_battery) $(print_date)"

    xsetroot -name "${statstring}"

    rx_old=$rx_now
    tx_old=$tx_now

    sleep 1
done

